package org.netbeans.modules.scss.options;

import java.awt.Cursor;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.filesystems.FileUtil;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

final class ScssPanel extends javax.swing.JPanel implements ChangeListener {

    ScssPanel(ScssOptionsPanelController controller) {
        initComponents();
        jRBundledRuntime.addChangeListener(this);
        jRExternalRuntime.addChangeListener(this);
        jRSystemRuntime.addChangeListener(this);
	jRSystemRuntime.setSelected(ScssSettings.getDefault().useSystemSass());
        jRBundledRuntime.setSelected(ScssSettings.getDefault().isBundleVersion());
        jRExternalRuntime.setSelected(!jRBundledRuntime.isSelected() && ! jRSystemRuntime.isSelected());
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblExternalVersion = new javax.swing.JLabel();
        lblSystemVersion = new javax.swing.JLabel();
        btnBrowseSassPath = new javax.swing.JButton();
        lblSassPath = new javax.swing.JLabel();
        txtSassPath = new javax.swing.JTextField();
        jRExternalRuntime = new javax.swing.JRadioButton();
        jRSystemRuntime = new javax.swing.JRadioButton();
        jRBundledRuntime = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cbCompileOnSave = new javax.swing.JCheckBox();
        cbOutputStyle = new javax.swing.JComboBox();
        cbLineComments = new javax.swing.JCheckBox();
        cbDebugInfo = new javax.swing.JCheckBox();
        lblBundleVersion = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        lbl_help = new javax.swing.JLabel();
        cbEnableCompass = new javax.swing.JCheckBox();

        lblExternalVersion.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.lblExternalVersion.text")); // NOI18N

        lblSystemVersion.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.lblSystemVersion.text")); // NOI18N

        btnBrowseSassPath.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.btnBrowseSassPath.text")); // NOI18N
        btnBrowseSassPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseSassPathActionPerformed(evt);
            }
        });

        lblSassPath.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.lblSassPath.text")); // NOI18N

        txtSassPath.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.txtSassPath.text")); // NOI18N
        txtSassPath.setMaximumSize(new java.awt.Dimension(6, 20));

        buttonGroup1.add(jRExternalRuntime);
        org.openide.awt.Mnemonics.setLocalizedText(jRExternalRuntime, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jRExternalRuntime.text")); // NOI18N

        buttonGroup1.add(jRSystemRuntime);
        org.openide.awt.Mnemonics.setLocalizedText(jRSystemRuntime, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jRSystemRuntime.text")); // NOI18N

        buttonGroup1.add(jRBundledRuntime);
        org.openide.awt.Mnemonics.setLocalizedText(jRBundledRuntime, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jRBundledRuntime.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jLabel2.text")); // NOI18N

        cbCompileOnSave.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.cbCompileOnSave.text")); // NOI18N
        cbCompileOnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCompileOnSaveActionPerformed(evt);
            }
        });

        cbOutputStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "compact", "compressed", "expanded", "nested" }));

        cbLineComments.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.cbLineComments.text")); // NOI18N
        cbLineComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLineCommentsActionPerformed(evt);
            }
        });

        cbDebugInfo.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.cbDebugInfo.text")); // NOI18N
        cbDebugInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDebugInfoActionPerformed(evt);
            }
        });

        lblBundleVersion.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.lblBundleVersion.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.jLabel4.text")); // NOI18N

        lbl_help.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(lbl_help, org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.lbl_help.text")); // NOI18N
        lbl_help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_helpMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_helpMousePressed(evt);
            }
        });

        cbEnableCompass.setText(org.openide.util.NbBundle.getMessage(ScssPanel.class, "ScssPanel.cbEnableCompass.text")); // NOI18N
        cbEnableCompass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEnableCompassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRBundledRuntime)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblBundleVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRExternalRuntime)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblExternalVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRSystemRuntime)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblSystemVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                                .addGap(85, 85, 85))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSassPath)
                                .addGap(18, 18, 18)
                                .addComponent(txtSassPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addComponent(btnBrowseSassPath)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbOutputStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbLineComments)
                                .addGap(52, 52, 52)
                                .addComponent(cbDebugInfo))
                            .addComponent(cbCompileOnSave)
                            .addComponent(cbEnableCompass))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator5))
                    .addComponent(lbl_help, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBundledRuntime)
                    .addComponent(lblBundleVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRExternalRuntime)
                    .addComponent(lblExternalVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRSystemRuntime)
                    .addComponent(lblSystemVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSassPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseSassPath)
                    .addComponent(lblSassPath))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbOutputStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLineComments)
                    .addComponent(cbDebugInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCompileOnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEnableCompass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(lbl_help, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_helpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_helpMouseEntered
        evt.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lbl_helpMouseEntered

    private void lbl_helpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_helpMousePressed
        URL u = null;
        try {
            u = new URL(NbBundle.getMessage(ScssPanel.class, "HELP_URL"));
        } catch (MalformedURLException exc) {
            Exceptions.printStackTrace(exc);
        }
        if (u != null) {
            org.openide.awt.HtmlBrowser.URLDisplayer.getDefault().showURL(u);
        }
    }//GEN-LAST:event_lbl_helpMousePressed

    private void cbDebugInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDebugInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDebugInfoActionPerformed

    private void cbLineCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLineCommentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLineCommentsActionPerformed

    private void cbCompileOnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCompileOnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCompileOnSaveActionPerformed

    private void btnBrowseSassPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseSassPathActionPerformed
        JFileChooser chooser = new JFileChooser(txtSassPath.getText());
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = chooser.showDialog(
            SwingUtilities.getWindowAncestor(this),
            org.openide.util.NbBundle.getMessage(ScssPanel.class, "LBL_Select"));
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            if (!file.isDirectory() || file.getPath().contains(" ")) {
                DialogDisplayer.getDefault().notify(new NotifyDescriptor.Message(
                    NbBundle.getMessage(ScssPanel.class, "ERROR_NotFile", file),
                    NotifyDescriptor.Message.WARNING_MESSAGE));
            return;
        }
        file = FileUtil.normalizeFile(file);
        txtSassPath.setText(file.getAbsoluteFile().toString());
        displayVersion();
        }
    }//GEN-LAST:event_btnBrowseSassPathActionPerformed

    void load() {
        txtSassPath.setText(ScssSettings.getDefault().getSassPath());
        txtSassPath.setEnabled(! jRSystemRuntime.isSelected());
        btnBrowseSassPath.setEnabled(! jRSystemRuntime.isSelected());
        displayVersion();
        cbCompileOnSave.setSelected(ScssSettings.getDefault().isCompileOnSave());
        cbLineComments.setSelected(ScssSettings.getDefault().isLineCommentsEnabled());
        cbDebugInfo.setSelected(ScssSettings.getDefault().isDebugInfoEnabled());
	cbEnableCompass.setSelected(ScssSettings.getDefault().useCompass());
        cbOutputStyle.setSelectedIndex(ScssSettings.getDefault().getOutputStyle().id);
//        jRExternalRuntime.setSelected(true);
        txtSassPath.setVisible(jRExternalRuntime.isSelected());
        btnBrowseSassPath.setVisible(jRExternalRuntime.isSelected());
        lblExternalVersion.setVisible(jRExternalRuntime.isSelected());
        lblSassPath.setVisible(jRExternalRuntime.isSelected());
    }

    void store() {
        ScssSettings.getDefault().setHamlPath(txtSassPath.getText());
        ScssSettings.getDefault().setCompileOnSave(cbCompileOnSave.isSelected());
        ScssSettings.getDefault().setLineCommentsEnabled(cbLineComments.isSelected());
        ScssSettings.getDefault().setDebugInfoEnabled(cbDebugInfo.isSelected());
        ScssSettings.getDefault().setOutputStyle(cbOutputStyle.getSelectedIndex());
        ScssSettings.getDefault().setBundle(jRBundledRuntime.isSelected());
	ScssSettings.getDefault().setUseSystemSass(jRSystemRuntime.isSelected());
	ScssSettings.getDefault().setUseCompass(cbEnableCompass.isSelected());
    }

    private void cbEnableCompassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCompileOnSave1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCompileOnSave1ActionPerformed

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    void displayVersion() {
        String version = null;
        File file = new File(txtSassPath.getText());
        Boolean useSystemSass = jRSystemRuntime.isSelected();
        if (file.exists()) {
            if (new File(file, "lib" + File.separator + "sass" + File.separator + "engine.rb").exists()
                    || new File("engine.rb").canExecute()) { //NOI18N
                version = ScssSettings.getSassVersion(file);
            }
        }
        if(useSystemSass) {
            version = ScssSettings.getSystemSassVersion();
            lblSystemVersion.setText(NbBundle.getMessage(ScssPanel.class, "LBL_HamlVersion", version));
        }

        if (version != null) {
            lblExternalVersion.setText(NbBundle.getMessage(ScssPanel.class, "LBL_HamlVersion", version));
        } else {
            lblExternalVersion.setText(NbBundle.getMessage(ScssPanel.class, "ERR_NoValidInstallation"));
        }
        version = ScssSettings.getBundleVersion();
        lblBundleVersion.setText(NbBundle.getMessage(ScssPanel.class, "LBL_HamlVersion", version));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseSassPath;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbCompileOnSave;
    private javax.swing.JCheckBox cbDebugInfo;
    private javax.swing.JCheckBox cbEnableCompass;
    private javax.swing.JCheckBox cbLineComments;
    private javax.swing.JComboBox cbOutputStyle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRBundledRuntime;
    private javax.swing.JRadioButton jRExternalRuntime;
    private javax.swing.JRadioButton jRSystemRuntime;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblBundleVersion;
    private javax.swing.JLabel lblExternalVersion;
    private javax.swing.JLabel lblSassPath;
    private javax.swing.JLabel lblSystemVersion;
    private javax.swing.JLabel lbl_help;
    private javax.swing.JTextField txtSassPath;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
        load();
    }
}
